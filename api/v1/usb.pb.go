// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: api/v1/usb.proto

package usb_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UsbSpeed int32

const (
	UsbSpeed_USB_SPEED_UNKNOWN    UsbSpeed = 0
	UsbSpeed_USB_SPEED_LOW        UsbSpeed = 1
	UsbSpeed_USB_SPEED_HIGH       UsbSpeed = 2
	UsbSpeed_USB_SPEED_FULL       UsbSpeed = 3
	UsbSpeed_USB_SPEED_SUPER      UsbSpeed = 4
	UsbSpeed_USB_SPEED_SUPER_PLUS UsbSpeed = 5
)

// Enum value maps for UsbSpeed.
var (
	UsbSpeed_name = map[int32]string{
		0: "USB_SPEED_UNKNOWN",
		1: "USB_SPEED_LOW",
		2: "USB_SPEED_HIGH",
		3: "USB_SPEED_FULL",
		4: "USB_SPEED_SUPER",
		5: "USB_SPEED_SUPER_PLUS",
	}
	UsbSpeed_value = map[string]int32{
		"USB_SPEED_UNKNOWN":    0,
		"USB_SPEED_LOW":        1,
		"USB_SPEED_HIGH":       2,
		"USB_SPEED_FULL":       3,
		"USB_SPEED_SUPER":      4,
		"USB_SPEED_SUPER_PLUS": 5,
	}
)

func (x UsbSpeed) Enum() *UsbSpeed {
	p := new(UsbSpeed)
	*p = x
	return p
}

func (x UsbSpeed) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsbSpeed) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_usb_proto_enumTypes[0].Descriptor()
}

func (UsbSpeed) Type() protoreflect.EnumType {
	return &file_api_v1_usb_proto_enumTypes[0]
}

func (x UsbSpeed) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UsbSpeed.Descriptor instead.
func (UsbSpeed) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_usb_proto_rawDescGZIP(), []int{0}
}

type PutUsbDevConnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bus     int32    `protobuf:"varint,1,opt,name=Bus,proto3" json:"Bus,omitempty"`                          // USB Bus number
	HubPort int32    `protobuf:"varint,2,opt,name=HubPort,proto3" json:"HubPort,omitempty"`                  // Parent Hub Port (Root Hub is port 0)
	Address int32    `protobuf:"varint,3,opt,name=Address,proto3" json:"Address,omitempty"`                  // USB Device Address on Bus n
	Speed   UsbSpeed `protobuf:"varint,4,opt,name=Speed,proto3,enum=usb.v1.UsbSpeed" json:"Speed,omitempty"` // USB Device Speed over Parent Hub connection
	Path    []int32  `protobuf:"varint,5,rep,packed,name=Path,proto3" json:"Path,omitempty"`                 // list of parent hub ports from Root Port
}

func (x *PutUsbDevConnRequest) Reset() {
	*x = PutUsbDevConnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_usb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutUsbDevConnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutUsbDevConnRequest) ProtoMessage() {}

func (x *PutUsbDevConnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_usb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutUsbDevConnRequest.ProtoReflect.Descriptor instead.
func (*PutUsbDevConnRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_usb_proto_rawDescGZIP(), []int{0}
}

func (x *PutUsbDevConnRequest) GetBus() int32 {
	if x != nil {
		return x.Bus
	}
	return 0
}

func (x *PutUsbDevConnRequest) GetHubPort() int32 {
	if x != nil {
		return x.HubPort
	}
	return 0
}

func (x *PutUsbDevConnRequest) GetAddress() int32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *PutUsbDevConnRequest) GetSpeed() UsbSpeed {
	if x != nil {
		return x.Speed
	}
	return UsbSpeed_USB_SPEED_UNKNOWN
}

func (x *PutUsbDevConnRequest) GetPath() []int32 {
	if x != nil {
		return x.Path
	}
	return nil
}

type PutUsbDevConnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PutUsbDevConnResponse) Reset() {
	*x = PutUsbDevConnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_usb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutUsbDevConnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutUsbDevConnResponse) ProtoMessage() {}

func (x *PutUsbDevConnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_usb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutUsbDevConnResponse.ProtoReflect.Descriptor instead.
func (*PutUsbDevConnResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_usb_proto_rawDescGZIP(), []int{1}
}

func (x *PutUsbDevConnResponse) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type PutUsbDevDescRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec           *BCD   `protobuf:"bytes,1,opt,name=Spec,proto3" json:"Spec,omitempty"`                      // compliant with USB Spec major.minor
	Class          uint32 `protobuf:"varint,2,opt,name=Class,proto3" json:"Class,omitempty"`                   // USB device class
	SubClass       uint32 `protobuf:"varint,3,opt,name=SubClass,proto3" json:"SubClass,omitempty"`             // USB device sub class
	Protocol       uint32 `protobuf:"varint,4,opt,name=Protocol,proto3" json:"Protocol,omitempty"`             // Interface Protocol
	MaxCtrlPktSize uint32 `protobuf:"varint,5,opt,name=MaxCtrlPktSize,proto3" json:"MaxCtrlPktSize,omitempty"` // Control interface max pkt size
	VendorID       uint32 `protobuf:"varint,6,opt,name=VendorID,proto3" json:"VendorID,omitempty"`             // ID assigned to Vendor of device
	ProductID      uint32 `protobuf:"varint,7,opt,name=ProductID,proto3" json:"ProductID,omitempty"`           // ID assigned by Manufacturer
	Version        *BCD   `protobuf:"bytes,8,opt,name=Version,proto3" json:"Version,omitempty"`                // Device Version
	Manufacturer   string `protobuf:"bytes,9,opt,name=Manufacturer,proto3" json:"Manufacturer,omitempty"`      // return string using iManufacturer index
	Product        string `protobuf:"bytes,10,opt,name=Product,proto3" json:"Product,omitempty"`               // return string using iProduct index
	SerialNum      string `protobuf:"bytes,11,opt,name=SerialNum,proto3" json:"SerialNum,omitempty"`           // return string using iSerialNumber index
	NumConfigs     uint32 `protobuf:"varint,12,opt,name=NumConfigs,proto3" json:"NumConfigs,omitempty"`        // Configuration descriptor count
}

func (x *PutUsbDevDescRequest) Reset() {
	*x = PutUsbDevDescRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_usb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutUsbDevDescRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutUsbDevDescRequest) ProtoMessage() {}

func (x *PutUsbDevDescRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_usb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutUsbDevDescRequest.ProtoReflect.Descriptor instead.
func (*PutUsbDevDescRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_usb_proto_rawDescGZIP(), []int{2}
}

func (x *PutUsbDevDescRequest) GetSpec() *BCD {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *PutUsbDevDescRequest) GetClass() uint32 {
	if x != nil {
		return x.Class
	}
	return 0
}

func (x *PutUsbDevDescRequest) GetSubClass() uint32 {
	if x != nil {
		return x.SubClass
	}
	return 0
}

func (x *PutUsbDevDescRequest) GetProtocol() uint32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *PutUsbDevDescRequest) GetMaxCtrlPktSize() uint32 {
	if x != nil {
		return x.MaxCtrlPktSize
	}
	return 0
}

func (x *PutUsbDevDescRequest) GetVendorID() uint32 {
	if x != nil {
		return x.VendorID
	}
	return 0
}

func (x *PutUsbDevDescRequest) GetProductID() uint32 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *PutUsbDevDescRequest) GetVersion() *BCD {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *PutUsbDevDescRequest) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *PutUsbDevDescRequest) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

func (x *PutUsbDevDescRequest) GetSerialNum() string {
	if x != nil {
		return x.SerialNum
	}
	return ""
}

func (x *PutUsbDevDescRequest) GetNumConfigs() uint32 {
	if x != nil {
		return x.NumConfigs
	}
	return 0
}

type PutUsbDevDescResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PutUsbDevDescResponse) Reset() {
	*x = PutUsbDevDescResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_usb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutUsbDevDescResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutUsbDevDescResponse) ProtoMessage() {}

func (x *PutUsbDevDescResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_usb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutUsbDevDescResponse.ProtoReflect.Descriptor instead.
func (*PutUsbDevDescResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_usb_proto_rawDescGZIP(), []int{3}
}

func (x *PutUsbDevDescResponse) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type BCD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BcdValue uint32 `protobuf:"varint,1,opt,name=BcdValue,proto3" json:"BcdValue,omitempty"` // major and minor bytes in decimal
}

func (x *BCD) Reset() {
	*x = BCD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_usb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BCD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BCD) ProtoMessage() {}

func (x *BCD) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_usb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BCD.ProtoReflect.Descriptor instead.
func (*BCD) Descriptor() ([]byte, []int) {
	return file_api_v1_usb_proto_rawDescGZIP(), []int{4}
}

func (x *BCD) GetBcdValue() uint32 {
	if x != nil {
		return x.BcdValue
	}
	return 0
}

var File_api_v1_usb_proto protoreflect.FileDescriptor

var file_api_v1_usb_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x75, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x22, 0x98, 0x01, 0x0a, 0x14, 0x50,
	0x75, 0x74, 0x55, 0x73, 0x62, 0x44, 0x65, 0x76, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x42, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x48, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x75, 0x73, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x62, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x05, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x22, 0x2f, 0x0a, 0x15, 0x50, 0x75, 0x74, 0x55, 0x73, 0x62, 0x44,
	0x65, 0x76, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8a, 0x03, 0x0a, 0x14, 0x50, 0x75, 0x74, 0x55, 0x73,
	0x62, 0x44, 0x65, 0x76, 0x44, 0x65, 0x73, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x75, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x43, 0x44, 0x52, 0x04, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x75, 0x62, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x26,
	0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x43, 0x74, 0x72, 0x6c, 0x50, 0x6b, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x4d, 0x61, 0x78, 0x43, 0x74, 0x72, 0x6c, 0x50,
	0x6b, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x25, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x75, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x43, 0x44, 0x52, 0x07,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x61, 0x6e, 0x75, 0x66,
	0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4d,
	0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e,
	0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x4e, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x22, 0x2f, 0x0a, 0x15, 0x50, 0x75, 0x74, 0x55, 0x73, 0x62, 0x44, 0x65, 0x76,
	0x44, 0x65, 0x73, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x21, 0x0a, 0x03, 0x42, 0x43, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x42,
	0x63, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x42,
	0x63, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x8b, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x62, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x53, 0x42, 0x5f, 0x53, 0x50, 0x45, 0x45,
	0x44, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x53, 0x42, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x44, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x12,
	0x0a, 0x0e, 0x55, 0x53, 0x42, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x44, 0x5f, 0x48, 0x49, 0x47, 0x48,
	0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x53, 0x42, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x44, 0x5f,
	0x46, 0x55, 0x4c, 0x4c, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x53, 0x42, 0x5f, 0x53, 0x50,
	0x45, 0x45, 0x44, 0x5f, 0x53, 0x55, 0x50, 0x45, 0x52, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x55,
	0x53, 0x42, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x44, 0x5f, 0x53, 0x55, 0x50, 0x45, 0x52, 0x5f, 0x50,
	0x4c, 0x55, 0x53, 0x10, 0x05, 0x32, 0xaa, 0x01, 0x0a, 0x03, 0x55, 0x73, 0x62, 0x12, 0x53, 0x0a,
	0x12, 0x50, 0x75, 0x74, 0x55, 0x73, 0x62, 0x44, 0x65, 0x76, 0x43, 0x6f, 0x6e, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x75, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74,
	0x55, 0x73, 0x62, 0x44, 0x65, 0x76, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x75, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x55, 0x73,
	0x62, 0x44, 0x65, 0x76, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x50, 0x75, 0x74, 0x55, 0x73, 0x62, 0x44, 0x65, 0x76, 0x44,
	0x65, 0x73, 0x63, 0x12, 0x1c, 0x2e, 0x75, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74,
	0x55, 0x73, 0x62, 0x44, 0x65, 0x76, 0x44, 0x65, 0x73, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x75, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x55, 0x73,
	0x62, 0x44, 0x65, 0x76, 0x44, 0x65, 0x73, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2f, 0x65, 0x64, 0x63,
	0x6f, 0x78, 0x39, 0x36, 0x2f, 0x64, 0x65, 0x76, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x75, 0x73, 0x62, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_usb_proto_rawDescOnce sync.Once
	file_api_v1_usb_proto_rawDescData = file_api_v1_usb_proto_rawDesc
)

func file_api_v1_usb_proto_rawDescGZIP() []byte {
	file_api_v1_usb_proto_rawDescOnce.Do(func() {
		file_api_v1_usb_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_usb_proto_rawDescData)
	})
	return file_api_v1_usb_proto_rawDescData
}

var file_api_v1_usb_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v1_usb_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_v1_usb_proto_goTypes = []interface{}{
	(UsbSpeed)(0),                 // 0: usb.v1.UsbSpeed
	(*PutUsbDevConnRequest)(nil),  // 1: usb.v1.PutUsbDevConnRequest
	(*PutUsbDevConnResponse)(nil), // 2: usb.v1.PutUsbDevConnResponse
	(*PutUsbDevDescRequest)(nil),  // 3: usb.v1.PutUsbDevDescRequest
	(*PutUsbDevDescResponse)(nil), // 4: usb.v1.PutUsbDevDescResponse
	(*BCD)(nil),                   // 5: usb.v1.BCD
}
var file_api_v1_usb_proto_depIdxs = []int32{
	0, // 0: usb.v1.PutUsbDevConnRequest.Speed:type_name -> usb.v1.UsbSpeed
	5, // 1: usb.v1.PutUsbDevDescRequest.Spec:type_name -> usb.v1.BCD
	5, // 2: usb.v1.PutUsbDevDescRequest.Version:type_name -> usb.v1.BCD
	1, // 3: usb.v1.Usb.PutUsbDevConnState:input_type -> usb.v1.PutUsbDevConnRequest
	3, // 4: usb.v1.Usb.PutUsbDevDesc:input_type -> usb.v1.PutUsbDevDescRequest
	2, // 5: usb.v1.Usb.PutUsbDevConnState:output_type -> usb.v1.PutUsbDevConnResponse
	4, // 6: usb.v1.Usb.PutUsbDevDesc:output_type -> usb.v1.PutUsbDevDescResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_v1_usb_proto_init() }
func file_api_v1_usb_proto_init() {
	if File_api_v1_usb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_usb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutUsbDevConnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_usb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutUsbDevConnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_usb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutUsbDevDescRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_usb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutUsbDevDescResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_usb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BCD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_usb_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_usb_proto_goTypes,
		DependencyIndexes: file_api_v1_usb_proto_depIdxs,
		EnumInfos:         file_api_v1_usb_proto_enumTypes,
		MessageInfos:      file_api_v1_usb_proto_msgTypes,
	}.Build()
	File_api_v1_usb_proto = out.File
	file_api_v1_usb_proto_rawDesc = nil
	file_api_v1_usb_proto_goTypes = nil
	file_api_v1_usb_proto_depIdxs = nil
}
